{"ast":null,"code":"import _classCallCheck from \"/Users/sarahnash/code/lunch-pods/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sarahnash/code/lunch-pods/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sarahnash/code/lunch-pods/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sarahnash/code/lunch-pods/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sarahnash/code/lunch-pods/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sarahnash/code/lunch-pods/client/src/containers/LargeGroupContainer.js\";\nimport React, { Component } from 'react';\nimport User from '../components/User.js';\nimport { connect } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nvar $ = window.jQuery;\nvar eventdate = '2019-05-01';\n\nvar LargeGroupContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LargeGroupContainer, _Component);\n\n  function LargeGroupContainer() {\n    _classCallCheck(this, LargeGroupContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LargeGroupContainer).apply(this, arguments));\n  }\n\n  _createClass(LargeGroupContainer, [{\n    key: \"componentDidMount\",\n    //modify this to use ajax with requested event date\n    value: function componentDidMount() {\n      $.ajax({\n        type: 'GET',\n        url: '/api/largegroup',\n        data: {\n          searchData: eventdate\n        }\n      }).then(function (results) {\n        var largegroupArray = result[0].user;\n        console.log(largegroupArray);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } // TODO: grab results from the large group and pass as props\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.users.map(function (user, index) {\n        return React.createElement(User, {\n          user: user,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return LargeGroupContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps)(LargeGroupContainer);","map":{"version":3,"sources":["/Users/sarahnash/code/lunch-pods/client/src/containers/LargeGroupContainer.js"],"names":["React","Component","User","connect","Row","$","window","jQuery","eventdate","LargeGroupContainer","ajax","type","url","data","searchData","then","results","largegroupArray","result","user","console","log","catch","error","props","users","map","index","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,IAAMC,CAAC,GAAGC,MAAM,CAACC,MAAjB;AACA,IAAMC,SAAS,GAAG,YAAlB;;IAEMC,mB;;;;;;;;;;;;;AAEJ;wCACoB;AAClBJ,MAAAA,CAAC,CAACK,IAAF,CAAO;AACLC,QAAAA,IAAI,EAAE,KADD;AAELC,QAAAA,GAAG,EAAE,iBAFA;AAGLC,QAAAA,IAAI,EAAE;AACJC,UAAAA,UAAU,EAAEN;AADR;AAHD,OAAP,EAOGO,IAPH,CAOQ,UAAUC,OAAV,EAAmB;AACvB,YAAIC,eAAe,GAAGC,MAAM,CAAC,CAAD,CAAN,CAAUC,IAAhC;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ;AACD,OAVH,EAWGK,KAXH,CAWS,UAAUC,KAAV,EAAiB;AACtBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OAbH;AAcD,K,CAED;;;;6BAES;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAACP,IAAD,EAAOQ,KAAP;AAAA,eAAiB,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAER,IAAZ;AAAkB,UAAA,GAAG,EAAEQ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AAAA,OAArB,CADH,CAFF,CADF;AAQD;;;;EA/B+B1B,S;;AAkClC,IAAM2B,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCJ,IAAAA,KAAK,EAAEI,KAAK,CAACJ;AADqB,GAAZ;AAAA,CAAxB;;AAIA,eAAetB,OAAO,CAACyB,eAAD,CAAP,CAA0BnB,mBAA1B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport User from '../components/User.js'\nimport { connect } from 'react-redux'\nimport Row from 'react-bootstrap/Row'\nconst $ = window.jQuery\nconst eventdate = '2019-05-01'\n\nclass LargeGroupContainer extends Component {\n\n  //modify this to use ajax with requested event date\n  componentDidMount() {\n    $.ajax({\n      type: 'GET',\n      url: '/api/largegroup',\n      data: {\n        searchData: eventdate\n      }\n    })\n      .then(function (results) {\n        let largegroupArray = result[0].user\n        console.log(largegroupArray)\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n  }\n\n  // TODO: grab results from the large group and pass as props\n\n  render() {\n    return (\n      <div>\n        <br/>\n        <Row>\n          {this.props.users.map((user, index) => <User user={user} key={index}/>)}\n        </Row>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  users: state.users\n})\n\nexport default connect(mapStateToProps) (LargeGroupContainer);\n"]},"metadata":{},"sourceType":"module"}