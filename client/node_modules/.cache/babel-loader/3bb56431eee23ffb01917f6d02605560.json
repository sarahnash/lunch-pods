{"ast":null,"code":"import _objectSpread from \"/Users/sarahnash/code/lunch-pods/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  users: [],\n  smallGroups: []\n};\n\nvar groupReducer = function groupReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state);\n\n  switch (action.type) {\n    case 'USER_GOING':\n      var newUsersGoing = state.users.slice();\n      newUsersGoing.push(action.user.user);\n      return _objectSpread({}, state, {\n        users: newUsersGoing\n      });\n\n    case 'USER_DECLINE':\n      var newUserDeclined = state.users.slice();\n      newUserDeclined.splice(newUserDeclined.indexOf(action.user.user), 1);\n      return _objectSpread({}, state, {\n        users: newUserDeclined\n      });\n\n    case 'MAKE_SMALL_GROUPS':\n      var participants = state.users.slice();\n      participants.sort(function (a, b) {\n        return .5 - Math.random();\n      }).slice();\n\n      var splitParticipants = function splitParticipants(participants) {\n        var totalGroups = [];\n\n        for (var i = 1; i < participants.length / 4; i++) {\n          totalGroups.push([]);\n        }\n\n        for (var j = 0; j < participants.length; j++) {\n          totalGroups[j % totalGroups.length].push(participants[j]);\n        }\n\n        return _objectSpread({}, state, {\n          smallGroups: totalGroups\n        });\n      };\n\n      return splitParticipants(participants);\n\n    case 'RESET_USERS':\n      return {\n        smallGroups: [],\n        users: initialState.users\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default groupReducer;","map":{"version":3,"sources":["/Users/sarahnash/code/lunch-pods/client/src/reducers/groupReducer.js"],"names":["initialState","users","smallGroups","groupReducer","state","action","console","log","type","newUsersGoing","slice","push","user","newUserDeclined","splice","indexOf","participants","sort","a","b","Math","random","splitParticipants","totalGroups","i","length","j"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,UAAOC,MAAM,CAACG,IAAd;AACE,SAAK,YAAL;AACA,UAAMC,aAAa,GAAGL,KAAK,CAACH,KAAN,CAAYS,KAAZ,EAAtB;AACAD,MAAAA,aAAa,CAACE,IAAd,CAAmBN,MAAM,CAACO,IAAP,CAAYA,IAA/B;AACA,+BACKR,KADL;AAEEH,QAAAA,KAAK,EAAEQ;AAFT;;AAIA,SAAK,cAAL;AACA,UAAMI,eAAe,GAAGT,KAAK,CAACH,KAAN,CAAYS,KAAZ,EAAxB;AACAG,MAAAA,eAAe,CAACC,MAAhB,CAAuBD,eAAe,CAACE,OAAhB,CAAwBV,MAAM,CAACO,IAAP,CAAYA,IAApC,CAAvB,EAAiE,CAAjE;AACA,+BACKR,KADL;AAEEH,QAAAA,KAAK,EAAEY;AAFT;;AAIA,SAAK,mBAAL;AACA,UAAMG,YAAY,GAAGZ,KAAK,CAACH,KAAN,CAAYS,KAAZ,EAArB;AACAM,MAAAA,YAAY,CAACC,IAAb,CAAkB,UAASC,CAAT,EAAWC,CAAX,EAAa;AAAC,eAAO,KAAKC,IAAI,CAACC,MAAL,EAAZ;AAA0B,OAA1D,EAA4DX,KAA5D;;AACE,UAAMY,iBAAiB,GAAG,SAApBA,iBAAoB,CAACN,YAAD,EAAkB;AAC1C,YAAIO,WAAW,GAAG,EAAlB;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGR,YAAY,CAACS,MAAb,GAAsB,CAAxC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9CD,UAAAA,WAAW,CAACZ,IAAZ,CAAiB,EAAjB;AACD;;AACD,aAAK,IAAIe,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGV,YAAY,CAACS,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AAC1CH,UAAAA,WAAW,CAAEG,CAAC,GAACH,WAAW,CAACE,MAAhB,CAAX,CAAoCd,IAApC,CAAyCK,YAAY,CAACU,CAAD,CAArD;AACD;;AACD,iCACKtB,KADL;AAEEF,UAAAA,WAAW,EAAEqB;AAFf;AAID,OAZD;;AAaA,aAAOD,iBAAiB,CAACN,YAAD,CAAxB;;AACF,SAAK,aAAL;AACA,aAAO;AACLd,QAAAA,WAAW,EAAE,EADR;AAELD,QAAAA,KAAK,EAAED,YAAY,CAACC;AAFf,OAAP;;AAKA;AACE,aAAOG,KAAP;AAvCJ;AAyCD,CA3CD;;AA6CA,eAAeD,YAAf","sourcesContent":["const initialState = {\n  users: [],\n  smallGroups: [],\n}\n\nconst groupReducer = (state = initialState, action) => {\n  console.log(state)\n  switch(action.type) {\n    case 'USER_GOING':\n    const newUsersGoing = state.users.slice()\n    newUsersGoing.push(action.user.user)\n    return {\n      ...state,\n      users: newUsersGoing\n    }\n    case 'USER_DECLINE':\n    const newUserDeclined = state.users.slice()\n    newUserDeclined.splice(newUserDeclined.indexOf(action.user.user),1)\n    return {\n      ...state,\n      users: newUserDeclined\n    }\n    case 'MAKE_SMALL_GROUPS':\n    const participants = state.users.slice()\n    participants.sort(function(a,b){return .5 - Math.random()}).slice()\n      const splitParticipants = (participants) => {\n        let totalGroups = []\n        for (var i=1; i < participants.length / 4; i++) {\n          totalGroups.push([])\n        }\n        for (var j=0; j < participants.length; j++) {\n          totalGroups[(j%totalGroups.length)].push(participants[j])\n        }\n        return {\n          ...state,\n          smallGroups: totalGroups\n        }\n      }\n      return splitParticipants(participants)\n    case 'RESET_USERS':\n    return {\n      smallGroups: [],\n      users: initialState.users\n    }\n    \n    default:\n      return state\n  }\n}\n\nexport default groupReducer"]},"metadata":{},"sourceType":"module"}