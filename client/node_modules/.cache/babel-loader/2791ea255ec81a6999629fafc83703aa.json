{"ast":null,"code":"import _classCallCheck from \"/Users/sarahnash/code/lunch-pods/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sarahnash/code/lunch-pods/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sarahnash/code/lunch-pods/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sarahnash/code/lunch-pods/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sarahnash/code/lunch-pods/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sarahnash/code/lunch-pods/client/src/components/AdminSort.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\n\nvar AdminSort =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminSort, _Component);\n\n  function AdminSort() {\n    _classCallCheck(this, AdminSort);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AdminSort).apply(this, arguments));\n  }\n\n  _createClass(AdminSort, [{\n    key: \"sortUsers\",\n    value: function sortUsers(event) {\n      event.preventDefault();\n      this.props.makeSmallGroups();\n      axios.post('/creategroups').then(function (response) {\n        console.log(response);\n        console.log('this is the creategroups call!');\n      });\n    }\n  }, {\n    key: \"resetUsers\",\n    value: function resetUsers(event) {\n      event.preventDefault();\n      this.props.resetUsers();\n      axios.get('/largegroup').then(function (response) {\n        console.log(response);\n        console.log('this is the large group again!');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Admin Section Only\"), React.createElement(Button, {\n        id: \"Sort\",\n        type: \"button\",\n        onClick: function onClick(event) {\n          return _this.sortUsers(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Sort Lunch Pods!\"), React.createElement(Button, {\n        id: \"Reset\",\n        type: \"button\",\n        onClick: function onClick(event) {\n          return _this.resetUsers(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Reset Users\"));\n    }\n  }]);\n\n  return AdminSort;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    makeSmallGroups: function makeSmallGroups() {\n      return dispatch({\n        type: 'MAKE_SMALL_GROUPS'\n      });\n    },\n    resetUsers: function resetUsers() {\n      return dispatch({\n        type: 'RESET_USERS'\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminSort);","map":{"version":3,"sources":["/Users/sarahnash/code/lunch-pods/client/src/components/AdminSort.js"],"names":["React","Component","connect","Button","AdminSort","event","preventDefault","props","makeSmallGroups","axios","post","then","response","console","log","resetUsers","get","sortUsers","mapStateToProps","state","users","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;IAEMC,S;;;;;;;;;;;;;8BAEMC,K,EAAO;AACfA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,KAAL,CAAWC,eAAX;AACAC,MAAAA,KAAK,CAACC,IAAN,CAAW,eAAX,EACGC,IADH,CACQ,UAASC,QAAT,EAAkB;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD,OAJH;AAKD;;;+BAEUT,K,EAAO;AAChBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,KAAL,CAAWQ,UAAX;AACAN,MAAAA,KAAK,CAACO,GAAN,CAAU,aAAV,EACCL,IADD,CACM,UAASC,QAAT,EAAkB;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD,OAJD;AAKD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFF,EAGE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,IAAI,EAAC,QAAvB;AAAgC,QAAA,OAAO,EAAE,iBAACT,KAAD;AAAA,iBAAW,KAAI,CAACY,SAAL,CAAeZ,KAAf,CAAX;AAAA,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,EAIE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,OAAO,EAAE,iBAACA,KAAD;AAAA,iBAAW,KAAI,CAACU,UAAL,CAAgBV,KAAhB,CAAX;AAAA,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,CADF;AAQD;;;;EA/BqBJ,S;;AAkCxB,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADqB,GAAZ;AAAA,CAAxB;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACxCd,IAAAA,eAAe,EAAE;AAAA,aAAMc,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAd;AAAA,KADuB;AAExCR,IAAAA,UAAU,EAAE;AAAA,aAAMO,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAd;AAAA;AAF4B,GAAf;AAAA,CAA3B;;AAKA,eAAerB,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA8CjB,SAA9C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Button from 'react-bootstrap/Button'\n\nclass AdminSort extends Component {\n  \n  sortUsers(event) {\n    event.preventDefault()\n    this.props.makeSmallGroups()\n    axios.post('/creategroups')\n      .then(function(response){\n        console.log(response)\n        console.log('this is the creategroups call!')\n      })\n  }\n\n  resetUsers(event) {\n    event.preventDefault()\n    this.props.resetUsers()\n    axios.get('/largegroup')\n    .then(function(response){\n      console.log(response)\n      console.log('this is the large group again!')\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <br/>\n        <h3>Admin Section Only</h3>\n        <Button id=\"Sort\" type=\"button\" onClick={(event) => this.sortUsers(event)}>Sort Lunch Pods!</Button>\n        <Button id=\"Reset\" type=\"button\" onClick={(event) => this.resetUsers(event)}>Reset Users</Button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  users: state.users\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  makeSmallGroups: () => dispatch({type: 'MAKE_SMALL_GROUPS'}),\n  resetUsers: () => dispatch({type: 'RESET_USERS'})\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AdminSort);"]},"metadata":{},"sourceType":"module"}